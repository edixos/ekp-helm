global:
  gcpProjectId: "ekp-dev"
  skipUnspecifiedFields: false
  cnrmNamespace: "cnrm-system"
  location: europe-west1
  abandon: true

tags:
  configConnector: true

gcpbucket:
  fullnameOverride: ekp-velero-bkp-bucket-test
  bucketName: "ekp-velero-bkp-bucket-test"
  accessControl:
    uniformBucketLevelAccess: false
    publicAccessPrevention: inherited
    createCloudIamPolicy: true
    iamPolicy:
      - member: serviceAccount:wi-velero@ekp-dev.iam.gserviceaccount.com
        role: roles/storage.admin

workloadIdentity:
  global:
    gsa:
      create: true
      name: wi-velero
      project: ekp-dev
    ksa:
      name: wi-velero
      namespace: infra-velero

iamPolicyMembers:
  members:
  - member: serviceAccount:wi-velero@ekp-dev.iam.gserviceaccount.com
    name: velero-gsa-storage-admin
    resourceRef:
      external: projects/ekp-dev
      kind: Project
    role: roles/storage.admin
  - member: serviceAccount:wi-velero@ekp-dev.iam.gserviceaccount.com
    name: velero-gsa-compute-admin
    resourceRef:
      external: projects/ekp-dev
      kind: Project
    role: roles/compute.storageAdmin

velero:
  credentials:
    useSecret: false
  serviceAccount:
    server:
      create: true
      name: wi-velero
      annotations:
        iam.gke.io/gcp-service-account: wi-velero@ekp-dev.iam.gserviceaccount.com
  configuration:
    backupStorageLocation:
    - name: default
      provider: gcp
      bucket: ekp-velero-bkp-bucket-test
      config:
        serviceAccount: "wi-velero@ekp-dev.iam.gserviceaccount.com"
    volumeSnapshotLocation:
    - name: default
      provider: gcp
      config:
        region: europe-west1
        project: ekp-dev

backups:
  enabled: true
  namespaces:
  - '*'
  schedule: "0 12 * * *"
  ttl: "168h0m0s"

prometheus:
  enabled: false
  rules:
    labels:
      prometheus: ekp-operator-prometheus
